<?php

use GuzzleHttp\RequestOptions;
use Spatie\Sitemap\Crawler\Profile;

return [
    // This contains the Laravel Packages that you want this plugin to utilize listed under their package identifiers
    'packages' => [
        'spatie/laravel-sitemap' => [
            'providers' => [
                '\Spatie\Sitemap\SitemapServiceProvider',
            ],

            // Aliases to be registered by your plugin in the form of $alias => $pathToFacade
            'aliases' => [
                'SitemapGenerator' => '\Spatie\Sitemap\SitemapGenerator',
            ],

            // The namespace to set the configuration under. For this example, this package accesses it's config via config('purifier.' . $key), so the namespace 'purifier' is what we put here
            'config_namespace' => 'laravel-sitemap',

            'guzzle_options' => [

                /*
                 * Whether or not cookies are used in a request.
                 */
                RequestOptions::COOKIES => true,

                /*
                 * The number of seconds to wait while trying to connect to a server.
                 * Use 0 to wait indefinitely.
                 */
                RequestOptions::CONNECT_TIMEOUT => 30,

                /*
                 * The timeout of the request in seconds. Use 0 to wait indefinitely.
                 */
                RequestOptions::TIMEOUT => 30,

                /*
                 * Describes the redirect behavior of a request.
                 */
                RequestOptions::ALLOW_REDIRECTS => false,
            ],

            /*
             * The sitemap generator can execute JavaScript on each page so it will
             * discover links that are generated by your JS scripts. This feature
             * is powered by headless Chrome.
             */
            'execute_javascript' => false,

            /*
             * The package will make an educated guess as to where Google Chrome is installed.
             * You can also manually pass it's location here.
             */
            'chrome_binary_path' => '',

            /*
             * The sitemap generator uses a CrawlProfile implementation to determine
             * which urls should be crawled for the sitemap.
             */
            'crawl_profile' => Profile::class,
        ],
    ],
];
